    let data;
    try {
        data = await landingSchema.find({}, "-_id");
        res.status(200).json(data);
    } catch (error) {
        res.status(400).json({ error: error });
    }

export const getLandingsByName = async (req: Request, res: Response) => {
    try {
        const name = req.params.name;
        const filter = { name: name }
        const query = await landingSchema.find(filter).exec();
        if (query.length == 0) {
            res.status(200).json({ msg: "No such landings for the name provided." })
        } else {
            res.status(200).json(query)
        }
    } catch (err) {
        console.log(err)
        res.status(400).json({
            msg: "Something went wrong. Bad request"
        })
    }
};

export const getLandingsByMass = async (req: Request, res: Response) => {
    try {
        const mass = parseInt(req.params.mass)
        const filter = { mass: mass }
        const query = await landingSchema.find(filter).exec();
        if (query.length == 0) {
            res.status(200).json({ msg: "No such landings for the mass provided." })
        } else {
            res.status(200).json(query)
        }
    } catch (err) {
        console.log(err)
        res.status(400)
    }
};

export const getLandingsByClass = async (req: Request, res: Response) => {
    try {
        const recclass = req.params.class
        const filter = { recclass: recclass }
        const query = await landingSchema.find(filter).exec();
        if (query.length == 0) {
            res.status(200).json({ msg: "No such landings for the class provided." })
        } else {
            res.status(200).json(query)
        }
    } catch (err) {
        console.log(err)
        res.status(400).json({ msg: "Bad Request" })
    }
};

export const createLanding = async (req: Request, res: Response) => {
    const { name, id, nametype, recclass, mass, fall, year, reclat, reclong, geolocation } = req.body;
    try {
        const newLanding: iLanding =  new landingSchema(req.body);
        newLanding.save((err, newLanding) => {
            if (err) return console.error(err);
            console.log(`${newLanding.name} saved.`)
        })
        res.status(201).json({ msg: "Landing created:" + req.body })
    } catch (err) {
        res.status(400).json({ msg: `Error ${err}` })
    }
};

export const editLanding = async (req: Request, res: Response) => {
    try {
        const { name, id, nametype, recclass, mass, fall, year, reclat, reclong, geolocation } = req.body;
        const update = req.body;
        const filter = { id: id };
        let landingToEdit = await landingSchema.findOneAndUpdate(filter, update, { new: true });
        res.status(201).json({ msg: `Landing with ID ${filter.id} edited and saved in the database: ` + landingToEdit })
    } catch (err) {
        console.log(err);
        res.status(400).json({ msg: "Bad Request." })
    }
};